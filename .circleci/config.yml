# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  terraform:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: cimg/base:2024.08

    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: "Get terraform"
          command: wget https://releases.hashicorp.com/terraform/1.9.4/terraform_1.9.4_linux_amd64.zip
      - run: 
          name: "Unzip terraform"
          command: unzip terraform_1.9.4_linux_amd64.zip
      - run: 
          name: "move terraform to bin folder"
          command: sudo mv terraform /bin
      - run:
          name: "run terraform version"
          command: terraform --version
  aws_configuration:
    docker:
      - image: cimg/aws:2024.03
    steps:
      - checkout
      - run:
          name: "update access key id"
          command: aws configuration set aws_access_key_id $aws_access_key
      - run: 
          name: "update secret id"
          command: aws configuration set aws_secret_access_key $aws_secret_access_key
      - run:
          name: "update region"
          command: aws configuration set default.region $aws_default_region
      - run: 
          name: "create env with cloud formation stack"
          command: aws cloudformation deploy --template-file cf.yaml --stack-name demoenv

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  create-infrastructure: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - aws_configuration
