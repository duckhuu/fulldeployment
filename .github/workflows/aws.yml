name: Full Deployment
run-name: Create Env by Terraform

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-southeast-2
  PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  HOSTNAME: ${{ secrets.SSH_HOST }}
  USER_NAME: ${{ secrets.SSH_USER_NAME }}

permissions:
  contents: read

jobs:
  CreateEnvTerraform:
    name: Create Env By Terraform
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: init terraform
      run: terraform init 
    - name: plan terraform
      run: terraform plan
    - name: apply terraform
      run: terraform apply --auto-approve
    - name: get terraform raw output
      run: terraform output -raw eip-public-ip
    - name: update public ip to github secret
      run: echo ip=$(terraform output -raw eip-public-ip) >> $GITHUB_ENV
 #   - name: run unit test
 #     run: sleep 60
    - name: deploy code 
      run: |
        echo "$PRIVATE_KEY" > private_key.pem && chmod 600 private_key.pem
        ssh -o StrictHostKeyChecking=no -i private_key.pem ${USER_NAME}@$ip '
          echo "<h1>Hi DC1 -- This is Github Action Pipeline --- This is latest code</h1>" | sudo tee /var/www/html/index.nginx-debian.html
        '
    - name: testing site that created by terraform
      run: curl http://$ip
    - name: destroy terraform 
      run: terraform destroy --auto-approve
  CreateEnvByCloudFormation:
    needs: CreateEnvTerraform 
    name: Create Env by CloudFormation
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Create env by CloudFormation
      run: aws cloudformation deploy --template-file cf.yaml --stack-name demoenv 
    - name: Get Stack EIP 
      run: aws cloudformation describe-stacks --region ap-southeast-2 --query 'Stacks[?StackName==`demoenv`][].Outputs[?OutputKey==`StackEIPGeneral`].OutputValue' --output text
    - name: Get Cloudformation Output EIP 
      run: echo cip=$(aws cloudformation describe-stacks --region ap-southeast-2 --query 'Stacks[?StackName==`demoenv`][].Outputs[?OutputKey==`StackEIPGeneral`].OutputValue' --output text) >> $GITHUB_ENV
    - name: testing site that created by cloudformation
      run: curl http://$cip
    - name: Describe stack events  
      run: aws cloudformation describe-stack-events --stack-name demoenv
    - name: sleep 
      run: sleep 30
    - name: Delete env by Cloudformation
      run: aws cloudformation delete-stack --stack-name demoenv
